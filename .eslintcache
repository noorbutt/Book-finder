[{"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\index.js":"1","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\App.js":"2","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Login.js":"4","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Register.js":"5","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\Home.js":"6","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\component\\nav\\Header.js":"7","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\firebase.js":"8","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\RegisterComplete.js":"9","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\Reducers\\index.js":"10","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\Reducers\\userReducer.js":"11","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\ForgotPassword.js":"12","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\index.js":"13","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\reportWebVitals.js":"14","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\App.js":"15","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\Reducers\\index.js":"16","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\firebase.js":"17","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\Home.js":"18","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\RegisterComplete.js":"19","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\ForgotPassword.js":"20","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\Login.js":"21","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\Register.js":"22","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\component\\nav\\Header.js":"23","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\Reducers\\userReducer.js":"24","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\BookCard.jsx":"25","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Contact.js":"26","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\Store\\action\\index.js":"27","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Message.js":"28"},{"size":1092,"mtime":1612722316388,"results":"29","hashOfConfig":"30"},{"size":2319,"mtime":1645630586266,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":4186,"mtime":1616088546880,"results":"33","hashOfConfig":"30"},{"size":2523,"mtime":1616078525079,"results":"34","hashOfConfig":"30"},{"size":6632,"mtime":1645913751098,"results":"35","hashOfConfig":"30"},{"size":3510,"mtime":1615833921638,"results":"36","hashOfConfig":"30"},{"size":1559,"mtime":1614185429735,"results":"37","hashOfConfig":"30"},{"size":4516,"mtime":1615924365974,"results":"38","hashOfConfig":"30"},{"size":244,"mtime":1607922353989,"results":"39","hashOfConfig":"30"},{"size":419,"mtime":1612983225994,"results":"40","hashOfConfig":"30"},{"size":2135,"mtime":1615922657466,"results":"41","hashOfConfig":"30"},{"size":990,"mtime":1607994513084,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":2136,"mtime":1608245303866,"results":"45","hashOfConfig":"43"},{"size":244,"mtime":1607922353989,"results":"46","hashOfConfig":"43"},{"size":716,"mtime":1608067898000,"results":"47","hashOfConfig":"43"},{"size":1050,"mtime":1609138485811,"results":"48","hashOfConfig":"43"},{"size":3339,"mtime":1609133063754,"results":"49","hashOfConfig":"43"},{"size":1965,"mtime":1608439756099,"results":"50","hashOfConfig":"43"},{"size":4022,"mtime":1609133078814,"results":"51","hashOfConfig":"43"},{"size":2418,"mtime":1609133043290,"results":"52","hashOfConfig":"43"},{"size":2137,"mtime":1608698773919,"results":"53","hashOfConfig":"43"},{"size":341,"mtime":1608068036956,"results":"54","hashOfConfig":"43"},{"size":2579,"mtime":1645655428825,"results":"55","hashOfConfig":"30"},{"size":3619,"mtime":1617213067139,"results":"56","hashOfConfig":"30"},{"size":205,"mtime":1611697784831,"results":"57","hashOfConfig":"58"},{"size":1436,"mtime":1645661366069,"results":"59","hashOfConfig":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"osj8gc",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17it9q7",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"labb8m",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\index.js",["127","128"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter}  from 'react-router-dom'\nimport \"antd/dist/antd.css\"\n\n// redux configuration......\nimport {applyMiddleware, createStore} from 'redux' \nimport {Provider} from 'react-redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport rootReducer from './Reducers'\nimport thunk from 'redux-thunk';\n// console.log(composeWithDevTools)\n\n// applyMiddleware(thunk) \n//store \nconst store = createStore( rootReducer , composeWithDevTools() )\n\n// , composeWithDevTools()\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}> \n    <BrowserRouter>\n     <App /> \n     </BrowserRouter>\n     </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n\n",["129","130"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\App.js",["131"],"\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport {Switch , Route}  from 'react-router-dom'\nimport Login from './pages/auth/Login'\nimport Register from './pages/auth/Register'\nimport Home from './pages/Home'\nimport Header from './component/nav/Header'\nimport RegisterComplete from './pages/auth/RegisterComplete'\nimport {ToastContainer} from 'react-toastify'\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {auth} from './firebase'\nimport {useDispatch} from  'react-redux';\nimport ForgotPassword from './pages/auth/ForgotPassword';\nimport Contact from './pages/auth/Contact';\n\n\n\n\n\n   const App = () => {\n\n\n //const dispatch = useDispatch() This hook returns \n // a reference to the dispatch function from the Redux store....\n   const dispatch = useDispatch()\n\n\n//    to check firebase auth state \n//// try to login the currently user logged in from firebase if there currently user logged in \n// // then we get the information  here and that information we want to dispatch to the redux store....\n   useEffect(()=>{\n\n\n\n////  This method gets invoked in the UI thread on changes in the authentication state\n/// When a user is signed in. When the current user is signed out.....\n const Unsubscribe = auth.onAuthStateChanged(async (user) =>{\n  \n\n     if(user){\n\n   /// firebase auth  method \n      const idTokenResult = await user.getIdTokenResult()\n\n     console.log(\"Currently logged in user\" , user) \n      \n    // update state in redux ....\n       dispatch({ \n         type:\"LOGGED_IN_USER\",\n         payload: {\n            email: user.email,\n            token:idTokenResult.token,\n            displayName:user.displayName,\n            photoURL:user.photoURL  }\n           ,\n\n\n       });\n\n     }\n\n\n  }) \n\n//   // cleanUp \nreturn () => Unsubscribe();\n\n  },[])\n\n\n\n\nreturn (\n\n  <>\n\n       <Header/>\n       <ToastContainer/> \n\n       <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/Login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} /> \n        <Route exact path=\"/register/complete\" component={RegisterComplete} />\n        <Route exact path=\"/forgot/password\" component={ForgotPassword} />\n        <Route exact path=\"/Contact\" component={Contact} />\n      </Switch>\n\n</>\n\n)\n\n\n\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Login.js",["132","133","134","135"],"\r\nimport React, {useState,useEffect} from 'react';\r\nimport {auth, googleAuthProvider} from '../../firebase'\r\nimport {toast , ToastContainer} from 'react-toastify'\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {MailOutlined , GoogleOutlined} from '@ant-design/icons'\r\nimport { Button } from 'antd';\r\nimport {useDispatch , useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { Input } from 'antd';\r\n\r\n\r\n\r\n// main function \r\n   const Login = ( { history }  ) => {\r\n\r\n\r\n const [email , setEmail] = useState(\"\")\r\n const [password , setPassword] = useState(\"\")\r\n const [loading,setLoading] = useState(false)\r\n\r\n  const {user} = useSelector((state)=> ({...state}))\r\n \r\n\r\n useEffect(()=>{\r\n   if(user && user.token)history.push('/')\r\n   },[user])\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\nlet dispatch = useDispatch()\r\n\r\n\r\n\r\n// handle submit function \r\n  const handleSubmit = async (e)=>{\r\n   \r\n\r\n// this is basically to prevent the browser from reload...\r\n    e.preventDefault();\r\n //console.table(email , password)\r\n//  when user click on this button we get the response... user try login set the loading  state to true.....  \r\nsetLoading(true)\r\n\r\n   try{\r\n     // user can sign in again with email and password...\r\n  const  result = await auth.signInWithEmailAndPassword(email, password)\r\n\r\n  console.log(result)\r\n\r\n  const {user} = result \r\n  const idTokenResult = await user.getIdTokenResult()\r\n\r\n\r\n  dispatch({ \r\n    type:\"LOGGED_IN_USER\",\r\n    payload:{   \r\n       email: user.email,\r\n       token:idTokenResult.token,\r\n      },\r\n  });\r\n\r\n\r\n  // redirect the user from many way...\r\n  history.push('/');\r\n\r\n  }\r\n\r\n\r\n  catch(error){\r\n    console.log(error)\r\n   toast.error(error.message);\r\n   setLoading(false);\r\n}\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n/// Google auth.............\r\n  const googleLogin = ()=>{\r\n   auth.signInWithPopup(googleAuthProvider)\r\n   .then(async (result )=>{\r\n // we get the result  from that result we can destruct the user...\r\n const {user} = result ;\r\n\r\n const idTokenResult = await user.getIdTokenResult()\r\n //making request our own on backend get the response from there based on user role..\r\n \r\n// In redux data update.....\r\n dispatch({ \r\n  type:\"LOGGED_IN_USER\",\r\n  payload:{   \r\n     email: user.email,\r\n     token:idTokenResult.token,\r\n    },\r\n});\r\n\r\n\r\n// redirect the user from many way...\r\nhistory.push('/');\r\n\r\n   })\r\n\r\n   .catch(error=>{\r\n     console.log(error)\r\n     toast.error(error.message)\r\n   })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const LoginForm = ()=> (  \r\n\r\n    <form onSubmit={handleSubmit} >\r\n\r\n   <div className=\"form-group\"> \r\n\r\n      <Input placeholder=\" enter your email \"\r\n      value={email}\r\n      onChange={(e)=>setEmail(e.target.value)}    \r\n      allowClear    type=\"email\"      />\r\n\r\n\r\n\r\n\r\n\r\n   </div>\r\n\r\n\r\n\r\n<div   className=\"form-group\">\r\n\r\n \r\n\r\n     <Input   placeholder=\"enter your password\"      type=\"password\" \r\n    value={password}\r\n    onChange={(e)=>setPassword(e.target.value)}  \r\n    allowClear       />\r\n\r\n\r\n   </div>\r\n\r\n\r\n<br/>  \r\n\r\n\r\n<Button type=\"danger \"\r\n   className=\"mb-3\" class=\"btn btn-danger\"\r\n   block \r\n   shape=\"round\"   \r\n   onClick={handleSubmit}   icon={< MailOutlined />}  size=\"large\"\r\n   disabled={ !email ||  password.length < 6 }\r\n    > Login with Email/password  </Button>\r\n  \r\n  \r\n\r\n    </form>\r\n\r\n)\r\n\r\n\r\n\r\n\r\n\r\n     return(\r\n\r\n         <div className=\"container p-5\"    className=' container  p-5   d-flex justify-content-center align-items-center flex-column'                  >\r\n\r\n        <div className=\"row\">\r\n      \r\n         {/* <div className=\"col-md-6 offest-md-3\"> */}\r\n\r\n{ loading ? ( <h4 className=\"text-danger\">Loading....</h4> ) :  ( <h4 className='text'> Login</h4> ) }\r\n\r\n\r\n       {/* <ToastContainer/>  */}\r\n      \r\n       {LoginForm()}\r\n       \r\n<Button type=\"danger\"\r\n    className=\"mb-3\"   \r\n    className=\"btn btn-info\"\r\n   block \r\n   shape=\"round\"   \r\n   onClick={googleLogin}  size=\"large\"\r\n   icon={< GoogleOutlined />}\r\n    > Login with Google  </Button>\r\n   \r\n\r\n   <Link to=\"/forgot/password\"  className=\"float-right  text-danger\" >Forgot password? </Link>\r\n\r\n       </div>\r\n         {/* </div> */}\r\n       \r\n         </div>\r\n    )\r\n\r\n\r\n\r\n\r\n }\r\n\r\n\r\n export default Login;\r\n\r\n\r\n","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Register.js",["136","137"],"\r\n import React, {useState,useEffect} from 'react';\r\n import {auth} from '../../firebase'\r\n import {toast , ToastContainer} from 'react-toastify'\r\n import \"react-toastify/dist/ReactToastify.css\";\r\n import { useSelector} from 'react-redux'\r\n import { Input } from 'antd';\r\n\r\n\r\n\r\n\r\n// main function \r\n    const Register = ({history})=>{\r\n\r\n\r\n  const [email , setEmail] = useState(\"\")\r\n\r\n\r\n// useSelector allows us to extract the data from redux store ....\r\n  const {user} = useSelector((state)=> ({...state}))\r\n \r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(user && user.token)history.push('/')\r\n    },[user])\r\n   \r\n   \r\n   \r\n\r\n\r\n\r\n// handle submit function \r\n   const handleSubmit = async (e)=>{\r\n\r\n // this is basically to prevent the browser from reload...\r\n     e.preventDefault();\r\n\r\n // config functoin will be used to  create that link by firebase...\r\n // Thats are the configuration which  will to use in the email that we will be sending...\r\n console.log(\"ENV---->\" ,process.env.REACT_APP_REGISTER_REDIRECT_URL )\r\n     const config = {\r\n // we need to create this page very soon....\r\n      url:'http://localhost:3000/register/complete',\r\n    //ProcessingInstruction to check the development \r\n      //url:process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n  // This must be true becacuse the registration is complete from one device and try to login from another device... \r\n      handleCodeInApp: true,\r\n    };\r\n    \r\n    \r\n   \r\n     \r\n   await auth.sendSignInLinkToEmail(email, config) \r\n  toast.success( \r\n       `Email is sent to ${email}.Click the Link to Complete your registration.`\r\n      );\r\n  // save user email in local storage \r\n  window.localStorage.setItem(\"emailForRegistration\" , email);\r\n    \r\n  // clear state\r\n  setEmail(\"\");\r\n    \r\n   };\r\n\r\n \r\n\r\n\r\n\r\n     const registerForm = ()=> (  \r\n\r\n     <form onSubmit={handleSubmit}>\r\n\r\n\r\n    <Input placeholder=\" enter your email \"\r\n  value={ email }\r\n  onChange={(e)=>setEmail(e.target.value)}    \r\n allowClear    type=\"email\"      />\r\n\r\n<br/>\r\n<br/>\r\n\r\n   <button type=\"button\" className=\"btn btn-raised\"  onClick={handleSubmit}  >Register</button>\r\n\r\n     </form>\r\n\r\n)\r\n\r\n\r\n      return(\r\n\r\n          <div className=\"container p-5 container  d-flex   justify-content-center align-items-center flex-column'               \">\r\n    \r\n\r\n         <div className=\"row\">\r\n     \r\n\r\n          <h4 className=\"Register\">Register</h4>\r\n\r\n       \r\n        {registerForm()}\r\n        </div>\r\n      \r\n        \r\n          </div>\r\n     )\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  export default Register;\r\n","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\Home.js",["138","139","140","141","142","143","144","145"],"\r\nimport React, {useState,useEffect} from 'react';\r\nimport './SearchResult.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button, FormGroup,InputGroup , InputGroupAddon ,Label,Spinner} from 'reactstrap';\r\nimport {toast , ToastContainer} from 'react-toastify';\r\nimport axios from 'axios' ;\r\nimport BookCard from './BookCard.jsx';\r\nimport { Input, Space } from 'antd';\r\nimport { AudioOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n  const onChange = e => {\r\n   console.log(e);\r\n };\r\n\r\n\r\n\r\n    \r\nconst suffix = (\r\n  <AudioOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: '#1890ff',\r\n    }}\r\n  />\r\n);\r\n     \r\n\r\n\r\n\r\n\r\n  const onSearch = value => console.log(value);\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n  // States\r\n  const [maxResults, setMaxResults] = useState(6);\r\n  const [startIndex, setStartIndex] = useState(1);\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  \r\n\r\n\r\n\r\n  //maxResults > 40 || maxResults < 1\r\n\r\n\r\n  // // Handle Search\r\n   const handleSubmit = () => {\r\n     setLoading(true);\r\n     if (maxResults > 6) {\r\n       toast.error('max results must be between 1 and 40');\r\n     } else {\r\n       axios\r\n ///////       Api intergeration using template literals .........\r\n         .get(\r\n`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=${maxResults}&startIndex=${startIndex}`\r\n        )\r\n         .then(res => {\r\n          console.log(res.data)\r\n           if (startIndex >= res.data.totalItems || startIndex < 1) {\r\n            toast.error(\r\n              `max reults must be between 1 and ${res.data.totalItems}`\r\n           );\r\n           \r\n           } else {\r\n             if (res.data.items.length > 0) {\r\n               setCards(res.data.items);\r\n               setLoading(false);\r\n             }\r\n           }\r\n         })\r\n         .catch(err => {\r\n          setLoading(true);\r\n         console.log(err.response);\r\n        });\r\n    }\r\n   };\r\n\r\n\r\n\r\n\r\n                     // input search using lifecycle method......//\r\n                     // it will render when first render.........//\r\n\r\n//useEffect(()=>{\r\n\r\n//setLoading(true)\r\n\r\n///axios.get(\r\n //'https://www.googleapis.com/books/v1/volumes?q=search+terms'\r\n//).then(()=>{\r\n // setCards(res.data.items);\r\n // setLoading(false);\r\n//}).catch(()=>{\r\n//console.log(err)\r\n//})\r\n\r\n///},[] )\r\n\r\n\r\n\r\n\r\n// useEffect(()=>{\r\n//   setCards(\r\n//       cards.filter((cards) =>\r\n//       cards.name.toLowerCase().includes(search.toLowerCase())\r\n//     )\r\n//     );\r\n\r\n// },[search,cards])\r\n\r\n\r\n                           ///////// ending ///////////\r\n\r\n\r\n\r\n  // Main Show Case\r\n  const mainHeader = () => {\r\n\r\n    return (\r\n      <div className='container  d-flex justify-content-center align-items-center flex-column'>\r\n             \r\n        {/* Overlay */}\r\n\r\n        <div className='filter'></div>\r\n        <h1\r\n          className=\"dislay-2   text-center   text-white mb-3\"\r\n          style={{ zIndex: 2}}\r\n        >\r\n          Book finder\r\n        </h1>\r\n\r\n        <div style={{zIndex :2  ,width:'60%'}}>\r\n          \r\n        \r\n{/* style={{height:'35px', width:'800px'}}  input-group-append */}\r\n\r\n\r\n\r\n<InputGroup size='lg' className='mb-3' >\r\n\r\n <div className=\"input-group-append\"  >\r\n \r\n\r\n<Input placeholder=\"Search your books........\"  allowClear onSearch={onSearch}    onChange={e => setQuery(e.target.value)}    value={query}   allowClear    />\r\n \r\n\r\n  <button type=\"button\" class=\"btn btn-primary\"    style={{width:'50px' , height:'35px',  paddingBottom:'18px' , scrollPaddingRight:'5px' , color:'#F7F9F9'  ,backgroundColor: \"#1890ff\" }}     onClick={handleSubmit}    >\r\n  <i class=\"fas fa-search\"></i>\r\n  </button>\r\n\r\n\r\n  </div>   \r\n\r\n    \r\n\r\n\r\n\r\n\r\n<div className=\"input-group-append\">\r\n\r\n  </div>\r\n\r\n\r\n\r\n<InputGroupAddon addonType='append'  >\r\n            \r\n            </InputGroupAddon>\r\n\r\n\r\n          </InputGroup>\r\n\r\n\r\n          <div className='d-flex text-white justify-content-center'>\r\n\r\n\r\n            <FormGroup >\r\n              <Label for='maxResults' className=\"labelmax\"  style={{color:\"#FFFFFF  \" , fontSize:\"18px\" , fontWeight:\"bold\"}}   >Max Results</Label>\r\n              <Input\r\n                type='number'\r\n                id='maxResults'\r\n                placeholder='Max Results'\r\n                value={maxResults}\r\n                onChange={e => setMaxResults(e.target.value)}\r\n                className='maxinput'\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup className='ml-5'>\r\n              <Label for='startIndex' className=\"labelindex\" style={{color:\"#FFFFFF   \" , fontSize:\"18px\" , fontWeight:\"bold\"}}  >Start Index</Label>\r\n              <Input\r\n                type='number'\r\n                id='startIndex'\r\n                placeholder='Start Index'\r\n                value={startIndex}\r\n                onChange={e => setStartIndex(e.target.value)}\r\n                className='indexinput'\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  // Cards list show......\r\n\r\n  const handleCards = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=' d-flex justify-content-center mt-3'>\r\n          <Spinner style={{ width: '3rem', height: '3rem' }} />\r\n        </div>\r\n      );\r\n    } else {\r\n      const items = cards.map((item, i) => {let thumbnail = '';\r\n        if (item.volumeInfo.imageLinks) {\r\n          thumbnail = item.volumeInfo.imageLinks.thumbnail;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n          <div className='col-lg-4 mb-3'  key={item.id}  >\r\n            <div class=\"listof\">\r\n\r\n            <BookCard\r\n              thumbnail={thumbnail}\r\n              title={item.volumeInfo.title}\r\n              pageCount={item.volumeInfo.pageCount}\r\n              language={item.volumeInfo.language}\r\n              authors={item.volumeInfo.authors}\r\n              publisher={item.volumeInfo.publisher}\r\n              description={item.volumeInfo.description}\r\n              previewLink={item.volumeInfo.previewLink}\r\n              infoLink={item.volumeInfo.infoLink}\r\n              />\r\n              </div>\r\n          </div>\r\n\r\n        );\r\n      });\r\n\r\n\r\n\r\n      return (\r\n        <div className=\"row mt-5\">\r\n\r\n        <div className='row'>{items}</div>\r\n          </div>\r\n       \r\n      );\r\n    }\r\n  };\r\n\r\n\r\n\r\n    return (\r\n      <div className='w-100 h-100'>\r\n         {mainHeader()} \r\n         <div >\r\n        {handleCards()}\r\n         </div>\r\n        {/* <ToastContainer /> */}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\component\\nav\\Header.js",["146"],"import React, {useState} from 'react';\r\nimport {Menu} from 'antd';\r\nimport { AppstoreOutlined, SettingOutlined ,UserOutlined , UserAddOutlined , LogoutOutlined, CommentOutlined , LoadingOutlined   } from '@ant-design/icons';\r\nimport firebase from 'firebase'\r\nimport {useDispatch , useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Link} from \"react-router-dom\";\r\nimport './header.css'\r\n\r\n\r\n\r\n\r\n\r\n const { SubMenu ,Item } = Menu;\r\n\r\n\r\n\r\n\r\n  const Header =   () => {\r\n\r\n\r\n\r\n// from destructuring you can rid of the  repetition code from everywhere...  \r\n const [current,setCurrent] = useState(\"home\")\r\n\r\nconst [loading , setLoading ] = useState(false)\r\n\r\n let dispatch = useDispatch();\r\n\r\n let {user} = useSelector((state)=> ({...state}))\r\n\r\n\r\n let history = useHistory( );\r\n\r\n\r\n\r\n\r\nconst handleClick = (e)=>{\r\n setCurrent(e.key)  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Logout = (  )=>{\r\n \r\n  if (loading) {\r\n    return (\r\n      <div className='d-flex justify-content-center mt-3'>\r\n        {/* <Spinner style={{ width: '3rem', height: '3rem' }} /> */}\r\n        <LoadingOutlined style={{ width: '3rem', height: '3rem' }}   />\r\n      </div>\r\n    );\r\n  } else{\r\n   \r\n  firebase.auth().signOut()\r\n\r\n    dispatch({\r\n      type:\"LOGOUT \",\r\n      payload:null,\r\n    })\r\n\r\n\r\n   console.log(firebase.auth().signOut())\r\n\r\n   history.push(\"/Login\")\r\n  }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n const Register = ()=>{\r\n     history.push('./Register/Complete')\r\n }\r\n\r\n\r\n\r\n\r\nconst Contact = ()=>{\r\n history.push('./Contact')\r\n }\r\n\r\n\r\n// img className='imgheader' style={{width:'150px' , height:'55px' ,marginLeft:'50px'}}\r\n// className='imgheader' style={{ width:'12px' , height:'13px' ,marginLeft:'50px' }}\r\n\r\n     return(\r\n     // Conditionally render....\r\n     // {JSON.stringify(user)}\r\n\r\n  <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n    \r\n{/*    \r\n  <div   className='imgheader' style={{ width:'12px' , height:'13px' ,marginLeft:'50px' }}           >\r\n <img   className='imgheader' style={{width:'150px' , height:'55px' ,marginLeft:'50px'}}           src='https://techaeris.com/wp-content/uploads/2016/07/Google-Play-Books-FI.jpg' />   \r\n  </div>  */}\r\n\r\n\r\n\r\n    <Item key=\"home\" icon={ <AppstoreOutlined /> }   className=\"float-right\" >\r\n     <Link  to=\"/\">Home  </Link>\r\n     </Item>\r\n  \r\n   \r\n\r\n\r\n{!user&& (  \r\n     <Item key=\"Register\" icon={ < UserAddOutlined /> }   className=\"float-right\"     >\r\n     <Link  to=\"/Register/complete\">Register</Link>\r\n     </Item>\r\n\r\n)}\r\n\r\n\r\n{!user&& (   \r\n     <Item key=\"Login\" icon={ <UserOutlined  /> }  className=\"float-right\">\r\n     <Link  to=\"/Login\">Login</Link>\r\n     </Item>\r\n)}\r\n\r\n\r\n\r\n{!user&& (   \r\n     <Item key=\"CardDetail\" icon={ <CommentOutlined /> }  className=\"float-right\">\r\n     <Link  to=\"/Contact\">Contact</Link>\r\n     </Item>\r\n)}\r\n\r\n\r\n\r\n{user&& (  \r\n<SubMenu key=\"SubMenu\"    icon={<SettingOutlined  />}\r\n title={user.email && user.email.split('706')[0] } \r\n className=\"float-right\" >\r\n\r\n\r\n     <Item key=\"setting:1\" icon={ <UserOutlined  /> } onClick={ Register}>Register</Item> \r\n     <Item key=\"setting:2\"  icon={ <CommentOutlined /> }  onClick={ Contact} >Contact</Item>\r\n     <Item icon={<  LogoutOutlined />}     onClick={Logout}>logout</Item>\r\n\r\n\r\n\r\n  \r\n  </SubMenu>\r\n )}\r\n\r\n   </Menu>\r\n        \r\n        // style={{width:'140px' , height:'50px' ,marginLeft:'5px'}}      \r\n\r\n\r\n        )\r\n        \r\n         \r\n        }\r\n        \r\n       \r\n        \r\n        \r\n        export default Header;\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        ","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\firebase.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\RegisterComplete.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\Reducers\\index.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\Reducers\\userReducer.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\ForgotPassword.js",["147"],"import React, {useState , useEffect} from 'react';\r\nimport {auth} from '../../firebase'\r\nimport {toast } from 'react-toastify'\r\nimport {useSelector} from 'react-redux'\r\nimport { Input } from 'antd';\r\n// in case if user they log in with email and password but next time they want to login again \r\n// but they forget password so in that case we should give them the option to enter a new password....\r\n\r\n\r\n\r\n\r\n\r\nconst ForgotPassword = ({history}) =>{\r\n    \r\nconst [email,setEmail] = useState(\"\")\r\nconst [loading , setLoading] = useState(false)\r\n\r\n const {user} = useSelector((state)=> ({...state}))\r\n\r\n\r\n useEffect(()=>{\r\n if(user && user.token)history.push('/')\r\n },[user])\r\n\r\n\r\n\r\nconst handleSubmit = async (e)=>{\r\n\r\ne.preventDefault();\r\nsetLoading(true)\r\n\r\n// the user will click on the link they will see a pop-up \r\n//window key they will be landing on a page they will be able to enter new password ..\r\nconst config={\r\n    // url:process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT_URL ,\r\n    url:'http://localhost:3000/Login',\r\n    handleCodeInApp: true, \r\n}\r\n \r\n\r\nawait auth.sendPasswordResetEmail(email , config)\r\n\r\n.then(()=>{\r\nsetEmail(\"\")\r\nsetLoading(false)\r\ntoast.success(\"Check your email and password reset link \")\r\n})\r\n\r\n.catch((error)=>{\r\nsetLoading(false)\r\ntoast.error(error.message)\r\nconsole.log(\"ERROR MSG IN FORGOT PASSWORD \",error )\r\n})\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <div className=\"container col-md-6 offset-md-3 p-5\">\r\n       {loading \r\n       ? (  <h4 className=\"text-danger\">  Loading... </h4>) :\r\n         (  <h4  className='forgot'>  Forgot Password </h4> \r\n        ) }\r\n\r\n    <form onSubmit={handleSubmit} >\r\n\r\n    <h6 className='forgot'  >  To reset your password, enter the email address you use to sign in to Google play.  </h6>\r\n     <br/>\r\n     <Input placeholder=\" enter your email \"\r\n  value={email}\r\n  onChange={(e)=>setEmail(e.target.value)}    \r\n allowClear    type=\"email\"      />\r\n\r\n\r\n\r\n<br/>\r\n<br/>\r\n <button  onClick={handleSubmit}   className=\"btn btn-info\"\r\n    disabled={!email}> Submit  </button>\r\n    </form>\r\n\r\n\r\n         </div>\r\n)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ForgotPassword;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\index.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\reportWebVitals.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\App.js",["148"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\Reducers\\index.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\firebase.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\Home.js",["149","150","151","152","153","154","155"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\RegisterComplete.js",["156"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\ForgotPassword.js",["157"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\Login.js",["158","159"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\pages\\auth\\Register.js",["160","161"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\component\\nav\\Header.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-APP\\src\\Reducers\\userReducer.js",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\BookCard.jsx",[],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Contact.js",["162"],"import React, { useState , useEffect } from 'react' ;\r\nimport './style.css';\r\nimport {SendOutlined} from '@ant-design/icons'\r\nimport dp from '../../firebase'\r\nimport firebase from 'firebase'\r\nimport {useSelector} from 'react-redux'\r\nimport Message from './Message'\r\nimport FlipMove from 'react-flip-move'\r\n\r\n\r\n\r\n\r\n\r\n  const Contact = () => {\r\n\r\n\r\n  const [input,setInput ] = useState('')\r\n  const [messages , setMessages] = useState([ ])  \r\n  const [username , setUsername] = useState('')\r\n\r\n\r\n    // function useState(){\r\n    //    return[ 'noor',123,'butt' ]\r\n    //  }\r\n\r\n  \r\n    // const [name,roll,sirName] = useState() \r\n \r\n    \r\n    //   console.log(name)\r\n    //   console.log(rollNum)\r\n    //   console.log(sirName) \r\n\r\n\r\n\r\n\r\nconsole.log(input)\r\nconsole.log( \"dpdata\", messages)\r\n\r\n\r\n// useState  = variable in React\r\n// useEffect = runs  code  on a condition \r\n\r\n\r\n\r\n useEffect (()=>{\r\n//   // runs once the app component loads.............\r\n\r\n   //takes the picture of database onSnapshot function.........\r\n\r\n dp.collection('messages')\r\n //orderBy() a query retrieves all documents that satisfy the query\r\n // in ascending order by document ID\r\n .orderBy('timestamp', 'desc')\r\n .onSnapshot(snapshot =>{\r\n\r\n setMessages(snapshot.docs.map(doc=>( {id:doc.id, message: doc.data()} ) ) )\r\n })\r\n\r\n},[])\r\n\r\n\r\nconsole.log(dp, \"dpdata\" )\r\n\r\n       \r\n  useEffect(() => {\r\n // run code here \r\n \r\nsetUsername(prompt('please enter you user name '))\r\n\r\n  // if its blank inside [] this code  run when the app component loads....\r\n \r\n  },[] ) //condition\r\n\r\n\r\n\r\nconst sendMessage = (event)=> {\r\n  event.preventDefault();\r\n  dp.collection('messages').add({\r\n    message:input,\r\n    username:username,\r\n    timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n  })\r\n  // all the logic to send message goes..........\r\n  // setMessages([...messages, { username:username, message: input}])\r\n  setInput('')\r\n}\r\n\r\n\r\n\r\n       // ///In redux data get from store .........\r\n       const {user} = useSelector((state)=>\r\n                    ({...state})         \r\n       )\r\n\r\n                 console.log(user,'coming user')\r\n\r\n     \r\n\r\n  \r\n      \r\n\r\n\r\n    return (\r\n  <section className=\"cont\">\r\n    \r\n          \r\n<div className=\"chatArea\"> \r\n\r\n\r\n\r\n\r\n\r\n         <div className=\"messageSections\" >\r\n   \r\n\r\n         <div className=\"listOfUsers\">\r\n           \r\n           \r\n\r\n         <div className=\"displayName\">\r\n\r\n\r\n            <div className=\"displayPic\">  \r\n\r\n           \r\n{/*             \r\n             {user ? ( <img src={user.photoURL} /> ):( <h6></h6>)}\r\n            {user ? (    <h6>  {user.displayName} </h6>) : ( <h1>empty  </h1>) } \r\n          </div>\r\n           */}\r\n\r\n\r\n\r\n\r\n<div className=\"displayPic\">\r\n\r\n\r\n\r\n\r\n</div>\r\n           \r\n\r\n             </div>\r\n\r\n           \r\n\r\n\r\n    <FlipMove>                \r\n               {  \r\n  messages.map( ( {id,message} )=>( \r\n    <Message key={id} username={username}  message={message}    />\r\n  \r\n\r\n  ))\r\n\r\n  }\r\n   </FlipMove>     \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div> \r\n     \r\n           \r\n      \r\n\r\n          </div> \r\n           </div>  \r\n\r\n      \r\n\r\n           <FlipMove>\r\n\r\n <div className=\"chatControls\"> \r\n\r\n  \r\n   \r\n  <textarea className=\"textarea\"  value={input}  onChange={(e)=>setInput(e.target.value)}   />\r\n\r\n\r\n      <button    className=\"btn btn-info\"     type=\"danger\" type=\"submit\"\r\n      onClick={sendMessage}    disabled={!input}  >\r\n      <SendOutlined    className=\"icon\"    />\r\n      </button>\r\n\r\n  \r\n\r\n\r\n  \r\n  \r\n\r\n    \r\n           </div> \r\n           </FlipMove>  \r\n       </div> \r\n          \r\n\r\n  </section>\r\n\r\n    );\r\n  }\r\n  \r\n  export default Contact;\r\n\r\n\r\n","C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\Store\\action\\index.js",[],["163","164"],"C:\\Users\\Zakria\\Desktop\\Redux-Application\\my-app\\src\\pages\\auth\\Message.js",[],["165","166"],{"ruleId":"167","severity":1,"message":"168","line":10,"column":9,"nodeType":"169","messageId":"170","endLine":10,"endColumn":24},{"ruleId":"167","severity":1,"message":"171","line":14,"column":8,"nodeType":"169","messageId":"170","endLine":14,"endColumn":13},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":69,"column":5,"nodeType":"178","endLine":69,"endColumn":7,"suggestions":"179"},{"ruleId":"167","severity":1,"message":"180","line":4,"column":17,"nodeType":"169","messageId":"170","endLine":4,"endColumn":31},{"ruleId":"176","severity":1,"message":"181","line":27,"column":6,"nodeType":"178","endLine":27,"endColumn":12,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":179,"column":44,"nodeType":"185","endLine":179,"endColumn":134},{"ruleId":"183","severity":1,"message":"184","line":194,"column":5,"nodeType":"185","endLine":194,"endColumn":29},{"ruleId":"167","severity":1,"message":"180","line":4,"column":18,"nodeType":"169","messageId":"170","endLine":4,"endColumn":32},{"ruleId":"176","severity":1,"message":"181","line":27,"column":7,"nodeType":"178","endLine":27,"endColumn":13,"suggestions":"186"},{"ruleId":"167","severity":1,"message":"187","line":2,"column":25,"nodeType":"169","messageId":"170","endLine":2,"endColumn":34},{"ruleId":"167","severity":1,"message":"188","line":5,"column":9,"nodeType":"169","messageId":"170","endLine":5,"endColumn":15},{"ruleId":"167","severity":1,"message":"180","line":6,"column":17,"nodeType":"169","messageId":"170","endLine":6,"endColumn":31},{"ruleId":"167","severity":1,"message":"189","line":9,"column":17,"nodeType":"169","messageId":"170","endLine":9,"endColumn":22},{"ruleId":"167","severity":1,"message":"190","line":13,"column":9,"nodeType":"169","messageId":"170","endLine":13,"endColumn":15},{"ruleId":"167","severity":1,"message":"191","line":17,"column":9,"nodeType":"169","messageId":"170","endLine":17,"endColumn":17},{"ruleId":"167","severity":1,"message":"192","line":24,"column":7,"nodeType":"169","messageId":"170","endLine":24,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":159,"column":143,"nodeType":"185","endLine":159,"endColumn":153},{"ruleId":"167","severity":1,"message":"193","line":26,"column":18,"nodeType":"169","messageId":"170","endLine":26,"endColumn":28},{"ruleId":"176","severity":1,"message":"181","line":23,"column":4,"nodeType":"178","endLine":23,"endColumn":10,"suggestions":"194"},{"ruleId":"176","severity":1,"message":"177","line":64,"column":5,"nodeType":"178","endLine":64,"endColumn":7,"suggestions":"195"},{"ruleId":"167","severity":1,"message":"187","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"192","line":14,"column":7,"nodeType":"169","messageId":"170","endLine":14,"endColumn":13},{"ruleId":"167","severity":1,"message":"196","line":27,"column":10,"nodeType":"169","messageId":"170","endLine":27,"endColumn":16},{"ruleId":"167","severity":1,"message":"197","line":29,"column":10,"nodeType":"169","messageId":"170","endLine":29,"endColumn":15},{"ruleId":"167","severity":1,"message":"198","line":29,"column":17,"nodeType":"169","messageId":"170","endLine":29,"endColumn":25},{"ruleId":"167","severity":1,"message":"199","line":30,"column":10,"nodeType":"169","messageId":"170","endLine":30,"endColumn":17},{"ruleId":"167","severity":1,"message":"200","line":30,"column":19,"nodeType":"169","messageId":"170","endLine":30,"endColumn":29},{"ruleId":"167","severity":1,"message":"180","line":3,"column":17,"nodeType":"169","messageId":"170","endLine":3,"endColumn":31},{"ruleId":"176","severity":1,"message":"181","line":19,"column":4,"nodeType":"178","endLine":19,"endColumn":10,"suggestions":"201"},{"ruleId":"167","severity":1,"message":"180","line":4,"column":17,"nodeType":"169","messageId":"170","endLine":4,"endColumn":31},{"ruleId":"176","severity":1,"message":"181","line":25,"column":6,"nodeType":"178","endLine":25,"endColumn":12,"suggestions":"202"},{"ruleId":"167","severity":1,"message":"180","line":4,"column":18,"nodeType":"169","messageId":"170","endLine":4,"endColumn":32},{"ruleId":"176","severity":1,"message":"181","line":27,"column":7,"nodeType":"178","endLine":27,"endColumn":13,"suggestions":"203"},{"ruleId":"183","severity":1,"message":"184","line":186,"column":61,"nodeType":"185","endLine":186,"endColumn":74},{"ruleId":"172","replacedBy":"204"},{"ruleId":"174","replacedBy":"205"},{"ruleId":"172","replacedBy":"206"},{"ruleId":"174","replacedBy":"207"},"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'thunk' is defined but never used.","no-native-reassign",["208"],"no-negated-in-lhs",["209"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'ToastContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["211"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["212"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'Search' is assigned a value but never used.","'onChange' is assigned a value but never used.","'suffix' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["213"],["214"],"'search' is assigned a value but never used.","'books' is assigned a value but never used.","'setbooks' is assigned a value but never used.","'loading' is assigned a value but never used.","'setloading' is assigned a value but never used.",["215"],["216"],["217"],["208"],["209"],["208"],["209"],"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},{"desc":"220","fix":"223"},{"desc":"218","fix":"224"},{"desc":"220","fix":"225"},{"desc":"220","fix":"226"},{"desc":"220","fix":"227"},"Update the dependencies array to be: [dispatch]",{"range":"228","text":"229"},"Update the dependencies array to be: [history, user]",{"range":"230","text":"231"},{"range":"232","text":"231"},{"range":"233","text":"231"},{"range":"234","text":"229"},{"range":"235","text":"231"},{"range":"236","text":"231"},{"range":"237","text":"231"},[1783,1785],"[dispatch]",[769,775],"[history, user]",[588,594],[665,671],[1660,1662],[628,634],[731,737],[492,498]]